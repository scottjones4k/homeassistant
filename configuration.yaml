homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/London
  customize: !include customize.yaml

# Enables the frontend
frontend:

# Enables configuration UI
config:

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# View all events in a logbook
logbook:

# Track the sun
sun:

# Text to speech
tts:
  platform: google

device_tracker:
  - platform: nmap_tracker
    hosts: 172.16.5.0/24
    home_interval: 10
  - platform: gpslogger

light:
  - platform: limitlessled
    bridges:
      - host: 172.16.5.46
        version: 5
        port: 8899
        groups:
        - number: 1
          type: rgbw
          name: Stairs

http:
  api_password: !secret http_password
  ssl_certificate: !secret ssl_cert
  ssl_key: !secret ssl_key
  trusted_networks:
    - 172.16.5.0/24
  base_url: !secret base_url
  server_port: 8123

nest:
  client_id: !secret nest_id
  client_secret: !secret nest_secret

ifttt:
  key: !secret ifttt

notify:
  - name: pushover
    platform: pushover
    api_key: !secret pushover_api_key
    user_key: !secret pushover_user_key
  - name: telegramscott
    platform: telegram
    api_key: !secret telegram_key
    chat_id: !secret telegram_chat
  - name: global
    platform: group
    services:
      - service: pushover
      - service: telegramscott

media_player:
  - platform: cast
  - platform: sonos

recorder:
  db_url: !secret db_url
  exclude:
    domains:
      - automation
      - weblink
      - updater
    entities:
      - sun.sun # Don't record sun data
      - sensor.last_boot
      - sensor.date

emulated_hue:
  exposed_domains:
    - light
    - input_boolean
    - media_player
    - switch

history:
  include:
    domains:
      - sensor
      - switch
      - light
hive:
  username: laura.redshaw@gmail.com
  password: !secret http_password

zone: !include zones.yaml
sensor: !include sensors.yaml
input_boolean: !include input_boolean.yaml
group: !include_dir_merge_named groups 
script: !include_dir_merge_named scripts
scene: !include scenes.yaml
automation: !include_dir_merge_list automation

shell_command: !include_dir_named shell_command/

alexa:
  intents:
    WhereAreWeIntent:
      speech:
        type: plaintext
        text: >
          {%- if is_state('device_tracker.scottphone', 'home') and
                 is_state('device_tracker.lauraphone', 'home') -%}
            You are both at home
          {%- else -%}
            Scott is at {{ states("device_tracker.scottphone") }}
            and Laura is at {{ states("device_tracker.lauraphone") }}
          {% endif %}

    LocateIntent:
      action:
        service: notify.global
        data_template:
          message: The location of {{ User }} has been queried via Alexa.
      speech:
        type: plaintext
        text: >
          {% set found = false %}
          {%- for state in states.device_tracker -%}
            {%- if state.name.lower() == User.lower() -%}
              {{ state.name }} is at {{ state.state }}
              {% set found = false %}
            {%- elif loop.last and not found -%}
              I am sorry, I do not know where {{ User }} is.
            {%- endif -%}
          {%- else -%}
            Sorry, I don't have any trackers registered.
          {%- endfor -%}
      card:
        type: simple
        title: Query Location
        content: The location of {{ User }} has been queried.
    LightOnIntent:
      action:
        service: light.turn_on
        data_template:
          entity_id: light.{{ Light | replace(" ", "_") }}
      speech:
        type: plaintext
        text: !include alexa_confirm.yaml
      card:
        type: simple
        title: Light turned on
        content: The {{ Light }} was turned on
    LightOffIntent:
      action:
        service: light.turn_off
        data_template:
          entity_id: light.{{ Light | replace(" ", "_") }}
      speech:
        type: plaintext
        text: !include alexa_confirm.yaml
      card:
        type: simple
        title: Light turned off
        content: The {{ Light }} was turned off